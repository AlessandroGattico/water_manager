/* 
 * 
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing ControllerRichiestaIdricaApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ControllerRichiestaIdricaApiTests
    {
        private ControllerRichiestaIdricaApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ControllerRichiestaIdricaApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ControllerRichiestaIdricaApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ControllerRichiestaIdricaApi
            //Assert.IsInstanceOfType(typeof(ControllerRichiestaIdricaApi), instance, "instance is a ControllerRichiestaIdricaApi");
        }

        /// <summary>
        /// Test AddRichiesta
        /// </summary>
        [Test]
        public void AddRichiestaTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string body = null;
            //var response = instance.AddRichiesta(body);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        /// <summary>
        /// Test DeleteRichiesta
        /// </summary>
        [Test]
        public void DeleteRichiestaTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.DeleteRichiesta(id);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        /// <summary>
        /// Test GetRichiestaId
        /// </summary>
        [Test]
        public void GetRichiestaIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetRichiestaId(id);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        /// <summary>
        /// Test GetRichiesteBacino
        /// </summary>
        [Test]
        public void GetRichiesteBacinoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetRichiesteBacino(id);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        /// <summary>
        /// Test GetRichiesteColtivazione
        /// </summary>
        [Test]
        public void GetRichiesteColtivazioneTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetRichiesteColtivazione(id);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
    }

}
